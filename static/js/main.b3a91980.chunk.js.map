{"version":3,"sources":["api/api.js","store/loading.js","store/actions.js","store/loadingError.js","store/characters.js","store/store.js","const/const.js","components/ModalWindow.js","components/Character.js","components/CharactersTable.js","components/Pagination.js","components/ProgressBar/index.js","components/Block.js","App.js","index.js"],"names":["getCharactersFromServer","a","async","fetch","characters","json","loadingReducer","state","action","type","errorReducer","charactersReducer","getIsLoading","isLoading","getLoadingError","loadingError","getCharacters","getCharactersCount","length","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","TABLE_HEADERS","id","name","status","gender","ModalWindow","character","setModalValue","open","Modal","onClose","Header","Content","image","Image","wrapped","size","src","className","species","Character","useState","modalValue","Table","Row","onClick","Object","keys","map","header","Cell","cn","table__cell","table__cell_desc","key","connect","withRouter","location","visibleCharacters","sort","b","localeCompare","filter","i","Math","floor","pathname","split","celled","HeaderCell","Body","charactersCount","activePage","pageNumber","ceil","firstItemShown","lastItemShown","to","replace","pagination__button_disabled","event","preventDefault","Array","page","activeClassName","pagination__button","Track","styled","div","Thumb","props","percentage","Procent","ProgressBar","min","value","max","ProgressBarContainer","Block","setPercentage","rand","random","randomInteger","App","activeItem","handleItemClick","e","setState","fetchCharacters","this","prevProps","history","test","slice","push","color","Menu","pointing","Item","active","React","Component","dispatch","then","results","ReactDOM","render","document","getElementById"],"mappings":"8RAEaA,EAA0B,0BAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACZE,MAHJ,+CAEgB,cAC/BC,EAD+B,yBAG9BA,EAAWC,QAHmB,sCCYxBC,EAZQ,WAA4B,IAA3BC,EAA0B,wDAAXC,EAAW,uCAChD,OAAQA,EAAOC,MACb,ICFyB,gBDGvB,OAAO,EACT,ICFwB,eDGxB,ICJ0B,iBDKxB,OAAO,EACT,QACE,OAAOF,IEEEG,EAVM,WAA4B,IAA3BH,EAA0B,wDAAXC,EAAW,uCAC9C,OAAQA,EAAOC,MACb,IDAwB,eCCtB,OAAO,EAET,QACE,OAAOF,ICIEI,EAVW,WAAyB,IAAxBJ,EAAuB,uDAAf,GAAIC,EAAW,uCAChD,OAAQA,EAAOC,MACb,IFD0B,iBEExB,OAAOD,EAAOJ,WAEhB,QACE,OAAOG,ICFAK,EAAe,SAACL,GAAD,OAAWA,EAAMM,WAChCC,EAAkB,SAACP,GAAD,OAAWA,EAAMQ,cACnCC,EAAgB,SAACT,GAAD,OAAWA,EAAMH,YACjCa,EAAqB,SAACV,GAAD,OAAWS,EAAcT,GAAOW,QAS5DC,EAAcC,YAAgB,CAClChB,WAAYO,EACZE,UAAWP,EACXS,aAAcL,IAKDW,EAFDC,YAAYH,EAZL,CACnBf,WAAY,GACZS,WAAW,EACXE,cAAc,GASqCQ,YAAgBC,M,yFCvBxDC,EAAgB,CAC3BC,GAAI,KACJC,KAAM,OACNC,OAAQ,SACRC,OAAQ,U,0CCsCKC,EAvCK,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,cAAeC,EAA7B,EAA6BA,KAA7B,OAClB,kBAACC,EAAA,EAAD,CACEC,QAAS,kBAAMH,GAAc,IAC7BC,KAAMA,GAEN,kBAACC,EAAA,EAAME,OAAP,yBAEG,IACAL,EAAUJ,MAEb,kBAACO,EAAA,EAAMG,QAAP,CAAeC,OAAK,GAClB,kBAACC,EAAA,EAAD,CACEC,SAAO,EACPC,KAAK,SACLC,IAAKX,EAAUO,QAEjB,yBAAKK,UAAU,aACb,4BAAKZ,EAAUJ,MACf,+CAAiBI,EAAUa,UAC3B,8CAAgBb,EAAUH,SAC1B,8CAAgBG,EAAUF,aCiBnBgB,EAlCG,SAAC,GAAmB,IAAjBd,EAAgB,EAAhBA,UAAgB,EACCe,oBAAS,GADV,mBAC5BC,EAD4B,KAChBf,EADgB,KAOnC,OACE,oCACE,kBAACgB,EAAA,EAAMC,IAAP,CACEN,UAAU,aACVO,QARc,WAClBlB,GAAc,KASTmB,OAAOC,KAAK3B,GAAe4B,KAAI,SAACC,GAAD,OAC9B,kBAACN,EAAA,EAAMO,KAAP,CACEZ,UAAWa,IAAG,CACZC,aAAa,EACbC,iBAA6B,WAAXJ,IAEpBK,IAAKL,GAEJvB,EAAUuB,OAGf,kBAAC,EAAD,CACEvB,UAAWA,EACXE,KAAMc,EACNf,cAAeA,OCaV4B,eAJS,SAACrD,GAAD,MAAY,CAClCH,WAAYY,EAAcT,MAGY,KAAzBqD,CAA+BC,aAtCtB,SAAC,GAA8B,IAA5BzD,EAA2B,EAA3BA,WAAY0D,EAAe,EAAfA,SAC/BC,EAAoB3D,EACvB4D,MAAK,SAAC/D,EAAGgE,GAAJ,OAAUhE,EAAE0B,KAAKuC,cAAcD,EAAEtC,SACtCwC,QAAO,SAACpC,EAAWqC,GAAZ,OAAmBC,KACxBC,MAAMF,EHbiB,GGaK,KAAON,EAASS,SAASC,MAAM,KAAK,MAErE,OACE,oCACE,kBAACxB,EAAA,EAAD,CAAOyB,QAAM,GACX,kBAACzB,EAAA,EAAMZ,OAAP,KACE,kBAACY,EAAA,EAAMC,IAAP,KACGE,OAAOC,KAAK3B,GAAe4B,KAAI,SAACC,GAAD,OAC9B,kBAACN,EAAA,EAAM0B,WAAP,CACEf,IAAKlC,EAAc6B,GACnBX,UAAU,oBAETlB,EAAc6B,SAKvB,kBAACN,EAAA,EAAM2B,KAAP,KACGZ,EAAkBV,KAAI,SAACtB,GAAD,OACrB,kBAAC,EAAD,CACE4B,IAAK5B,EAAUL,GACfK,UAAWA,c,SCwCV6B,eAJS,SAACrD,GAAD,MAAY,CAClCqE,gBAAiB3D,EAAmBV,MAGE,KAAzBqD,CAA+BC,aAlE3B,SAAC,GAAmC,IAAjCe,EAAgC,EAAhCA,gBACdC,GAD8C,EAAff,SACRS,SAASC,MAAM,KAAK,GAC3CM,EAAaT,KAAKU,KAAKH,EJVD,GIWtBI,EJXsB,EIWYH,EAAjB,EACjBI,EJZsB,EIYWJ,EAAaD,EAChDA,EJbwB,EIcPC,EAErB,OACE,4BAAQlC,UAAU,UAChB,wBAAIA,UAAU,cACZ,kBAAC,IAAD,CACEuC,GAAE,UAAKL,EAAa,GACpBM,SAAO,EACPxC,UAAWa,IAAG,CACZ,8CAA8C,EAC9C4B,4BAA4C,IAAfP,IAE/B3B,QAAS,SAACmC,GACW,IAAfR,GACFQ,EAAMC,mBATZ,YAeC,YAAIC,MAAMT,GAAY1B,QAAQC,KAAI,SAACmC,GAAD,OACjC,wBAAI7B,IAAK6B,GACP,kBAAC,IAAD,CACEN,GAAE,UAAKM,EAAO,GACdL,SAAO,EACPxC,UAAU,qBACV8C,gBAAgB,6BAEfD,EAAO,OAId,kBAAC,IAAD,CACEN,GAAE,UAAKL,EAAa,GACpBM,SAAO,EACPxC,UAAWa,IAAG,CACZkC,oBAAoB,EACpBN,4BAA6BP,IAAeC,IAE9C5B,QAAS,SAACmC,GACJR,IAAeC,GACjBO,EAAMC,mBATZ,SAgBF,0CACWN,EADX,wBAEIC,EAFJ,eAEwBL,S,gmBC5D9B,IAAMe,EAAQC,IAAOC,IAAV,KASLC,EAAQF,IAAOC,IAAV,KACA,SAACE,GAAD,OAAWA,EAAMC,cAMtBC,EAAUL,IAAOC,IAAV,KA4BEK,EAnBK,SAAC,GAAoB,IACxBC,EAAKC,EAAOC,EADNL,EAAiB,EAAjBA,WAGrB,OACE,oCACE,kBAACL,EAAD,KACE,kBAACG,EAAD,CAAOE,YALEG,EAKgB,EALXC,EAKcJ,EALPK,EAKmB,IALXhC,KAAK8B,IAAI9B,KAAKgC,IAAIF,EAAKC,GAAQC,OAO9D,kBAACJ,EAAD,eACMD,EADN,Q,iHChCN,IAAMM,GAAuBV,IAAOC,IAAV,KA8CXU,GAzCD,WACZ,IADkB,EAOkBzD,mBAAS,IAP3B,mBAOXkD,EAPW,KAOCQ,EAPD,KASlB,OACE,yBAAK7D,UAAU,WACb,yBAAKA,UAAU,cAAf,MACA,yBAAKA,UAAU,SACb,yBAAKA,UAAU,kBAAf,kHACA,yBAAKA,UAAU,eAAf,wKACA,yBAAKA,UAAU,gBAAf,WACA,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,yBAAf,2IAGA,kBAAC2D,GAAD,KACE,kBAAC,EAAD,CAAaN,WAAYA,KAE3B,yBAAKrD,UAAU,2BACb,4BACEA,UAAU,uBACVlC,KAAK,SACLyC,QAAS,kBA3BD,SAACiD,EAAKE,GAC1B,IAAMI,EAAON,EAAM9B,KAAKqC,UAAYL,EAAM,EAAIF,GAE9CK,EAAcnC,KAAKC,MAAMmC,IAwBEE,CAAc,GAAI,OAHnC,gEAOA,uBAAGhE,UAAU,sBAAb,qFCzBRiE,G,2MAEJrG,MAAQ,CAAEsG,WAAY,Q,EAiBtBC,gBAAkB,SAACC,EAAD,OAAMpF,EAAN,EAAMA,KAAN,OAAiB,EAAKqF,SAAS,CAAEH,WAAYlF,K,oFAZ7DsF,EAF4BC,KAAKnB,MAAzBkB,qB,yCAKSE,GAAY,IAAD,EACED,KAAKnB,MAA3BqB,EADoB,EACpBA,QAAStD,EADW,EACXA,SAEgB,IAA7BA,EAASS,SAASrD,QAChB,QAAQmG,KAAKvD,EAASS,SAAS+C,OAAO,KAC1CF,EAAQG,KAAK,CAAEhD,SAAU,S,+BAMnB,IACAsC,EAAeK,KAAK3G,MAApBsG,WADD,EAG8CK,KAAKnB,MAAlDlF,EAHD,EAGCA,UAAWE,EAHZ,EAGYA,aAAc6D,EAH1B,EAG0BA,gBAEjC,OAAI/D,EAEA,kBAAC,IAAD,CAAQ8B,UAAU,UAAUlC,KAAK,YAAY+G,MAAM,YAInDzG,EAEA,uBAAG4B,UAAU,iBAAb,gCAKF,6BACE,kBAAC8E,EAAA,EAAD,CAAMC,UAAQ,GACZ,kBAACD,EAAA,EAAKE,KAAN,CACEhG,KAAK,aACLiG,OAAuB,eAAff,EACR3D,QAASgE,KAAKJ,kBAEhB,kBAACW,EAAA,EAAKE,KAAN,CACEhG,KAAK,QACLiG,OAAuB,UAAff,EACR3D,QAASgE,KAAKJ,mBAGlB,6BACkB,eAAfD,GAA+BjC,EAAkB,GAChD,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,OAGY,UAAfiC,GACC,oCACE,kBAAC,GAAD,a,GA7DIgB,IAAMC,WA4ETlE,gBANS,SAACrD,GAAD,MAAY,CAClCM,UAAWD,EAAaL,GACxBQ,aAAcD,EAAgBP,GAC9BqE,gBAAiB3D,EAAmBV,MAKpC,CAAE0G,gBXjF0B,kBAAM,SAAMc,GAAN,SAAA9H,EAAAC,OAAA,gDAClC6H,EATiC,CAAEtH,KAJR,kBAe3B,IACET,IAA0BgI,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QAChCF,EAVwC,CAC5CtH,KAP4B,iBAQ5BL,WAQ2B6H,OAEzB,SACAF,EAf8B,CAAEtH,KAHR,iBAUQ,wCW+ErBmD,CAGbC,YAAW+C,KCzFbsB,IAASC,OACP,kBAAC,IAAD,CAAU9G,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,GAAD,QAGJ+G,SAASC,eAAe,W","file":"static/js/main.b3a91980.chunk.js","sourcesContent":["const URL_CHARACTERS = 'https://rickandmortyapi.com/api/character/';\n\nexport const getCharactersFromServer = async() => {\n  const characters = await fetch(URL_CHARACTERS);\n\n  return characters.json();\n};\n","import { START_LOADING, HANDLE_SUCCESS, HANDLE_ERROR } from './actions';\n\nconst loadingReducer = (state = false, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return true;\n    case HANDLE_ERROR:\n    case HANDLE_SUCCESS:\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport default loadingReducer;\n","import { getCharactersFromServer } from '../api/api';\n\nexport const START_LOADING = 'START_LOADING';\nexport const HANDLE_SUCCESS = 'HANDLE_SUCCESS';\nexport const HANDLE_ERROR = 'HANDLE_ERROR';\n\nexport const startLoading = () => ({ type: START_LOADING });\nexport const handleError = () => ({ type: HANDLE_ERROR });\n\nexport const handleSuccess = (characters) => ({\n  type: HANDLE_SUCCESS,\n  characters,\n});\n\nexport const loadCharacters = () => async(dispatch) => {\n  dispatch(startLoading());\n\n  try {\n    getCharactersFromServer().then(({ results }) => {\n      dispatch(handleSuccess(results));\n    });\n  } catch {\n    dispatch(handleError());\n  }\n};\n","import { HANDLE_ERROR } from './actions';\n\nconst errorReducer = (state = false, action) => {\n  switch (action.type) {\n    case HANDLE_ERROR:\n      return true;\n\n    default:\n      return state;\n  }\n};\n\nexport default errorReducer;\n","import { HANDLE_SUCCESS } from './actions';\n\nconst charactersReducer = (state = [], action) => {\n  switch (action.type) {\n    case HANDLE_SUCCESS:\n      return action.characters;\n\n    default:\n      return state;\n  }\n};\n\nexport default charactersReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport loadingReducer from './loading';\nimport errorReducer from './loadingError';\nimport charactersReducer from './characters';\n\nexport const getIsLoading = (state) => state.isLoading;\nexport const getLoadingError = (state) => state.loadingError;\nexport const getCharacters = (state) => state.characters;\nexport const getCharactersCount = (state) => getCharacters(state).length;\nexport const getSort = (state) => state.characters;\n\nconst initialState = {\n  characters: [],\n  isLoading: false,\n  loadingError: false,\n};\n\nconst rootReducer = combineReducers({\n  characters: charactersReducer,\n  isLoading: loadingReducer,\n  loadingError: errorReducer,\n});\n\nconst store = createStore(rootReducer, initialState, applyMiddleware(thunk));\n\nexport default store;\n","export const ITEMS_PER_PAGE = 5;\nexport const TABLE_HEADERS = {\n  id: 'id',\n  name: 'name',\n  status: 'status',\n  gender: 'gender',\n};\n","import React from 'react';\nimport { Modal, Image } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nconst ModalWindow = ({ character, setModalValue, open }) => (\n  <Modal\n    onClose={() => setModalValue(false)}\n    open={open}\n  >\n    <Modal.Header>\nDetails about the\n      {' '}\n      {character.name}\n    </Modal.Header>\n    <Modal.Content image>\n      <Image\n        wrapped\n        size=\"medium\"\n        src={character.image}\n      />\n      <div className=\"character\">\n        <h1>{character.name}</h1>\n        <div>{`SPECIES:${character.species}`}</div>\n        <div>{`STATUS:${character.status}`}</div>\n        <div>{`GENDER:${character.gender}`}</div>\n      </div>\n    </Modal.Content>\n  </Modal>\n);\n\nModalWindow.propTypes = {\n  open: PropTypes.bool.isRequired,\n  setModalValue: PropTypes.bool.isRequired,\n  character: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    status: PropTypes.string.isRequired,\n    species: PropTypes.string.isRequired,\n    image: PropTypes.string,\n    gender: PropTypes.string,\n  }).isRequired,\n};\n\nexport default ModalWindow;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { Table } from 'semantic-ui-react';\nimport ModalWindow from './ModalWindow';\nimport { TABLE_HEADERS } from '../const/const';\n\nconst Character = ({ character }) => {\n  const [modalValue, setModalValue] = useState(false);\n\n  const handleClick = () => {\n    setModalValue(true);\n  };\n\n  return (\n    <>\n      <Table.Row\n        className=\"table__row\"\n        onClick={handleClick}\n      >\n        {Object.keys(TABLE_HEADERS).map((header) => (\n          <Table.Cell\n            className={cn({\n              table__cell: true,\n              table__cell_desc: header === 'gender',\n            })}\n            key={header}\n          >\n            {character[header]}\n          </Table.Cell>\n        ))}\n        <ModalWindow\n          character={character}\n          open={modalValue}\n          setModalValue={setModalValue}\n        />\n      </Table.Row>\n    </>\n  );\n};\n\nexport default Character;\n\nCharacter.propTypes = {\n  character: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    status: PropTypes.string.isRequired,\n    gender: PropTypes.string.isRequired,\n    image: PropTypes.string,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getCharacters } from '../store/store';\nimport { TABLE_HEADERS, ITEMS_PER_PAGE } from '../const/const';\nimport Character from './Character';\n\nconst CharactersTable = ({ characters, location }) => {\n  const visibleCharacters = characters\n    .sort((a, b) => a.name.localeCompare(b.name))\n    .filter((character, i) => (Math\n      .floor(i / ITEMS_PER_PAGE) + 1 === +location.pathname.split('/')[1]));\n\n  return (\n    <>\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            {Object.keys(TABLE_HEADERS).map((header) => (\n              <Table.HeaderCell\n                key={TABLE_HEADERS[header]}\n                className=\"table__head-cell\"\n              >\n                {TABLE_HEADERS[header]}\n              </Table.HeaderCell>\n            ))}\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {visibleCharacters.map((character) => (\n            <Character\n              key={character.id}\n              character={character}\n            />\n          ))}\n        </Table.Body>\n      </Table>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  characters: getCharacters(state),\n});\n\nexport default connect(mapStateToProps, null)(withRouter(CharactersTable));\n\nCharactersTable.propTypes = {\n  characters: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n  })).isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport cn from 'classnames';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { getCharactersCount } from '../store/store';\nimport { ITEMS_PER_PAGE } from '../const/const';\n\nconst Pagination = ({ charactersCount, location }) => {\n  const activePage = +location.pathname.split('/')[1];\n  const pageNumber = Math.ceil(charactersCount / ITEMS_PER_PAGE);\n  const firstItemShown = ITEMS_PER_PAGE * activePage - (ITEMS_PER_PAGE - 1);\n  const lastItemShown = ITEMS_PER_PAGE * activePage > charactersCount\n    ? charactersCount\n    : ITEMS_PER_PAGE * activePage;\n\n  return (\n    <footer className=\"footer\">\n      <ul className=\"pagination\">\n        <NavLink\n          to={`${activePage - 1}`}\n          replace\n          className={cn({\n            'pagination__button pagination__button_prev': true,\n            pagination__button_disabled: activePage === 1,\n          })}\n          onClick={(event) => {\n            if (activePage === 1) {\n              event.preventDefault();\n            }\n          }}\n        >\n          Previous\n        </NavLink>\n        {[...Array(pageNumber).keys()].map((page) => (\n          <li key={page}>\n            <NavLink\n              to={`${page + 1}`}\n              replace\n              className=\"pagination__button\"\n              activeClassName=\"pagination__button_active\"\n            >\n              {page + 1}\n            </NavLink>\n          </li>\n        ))}\n        <NavLink\n          to={`${activePage + 1}`}\n          replace\n          className={cn({\n            pagination__button: true,\n            pagination__button_disabled: activePage === pageNumber,\n          })}\n          onClick={(event) => {\n            if (activePage === pageNumber) {\n              event.preventDefault();\n            }\n          }}\n        >\n          Next\n        </NavLink>\n      </ul>\n      <p>\n        {`From ${firstItemShown} to\n        ${lastItemShown} of ${charactersCount}`}\n      </p>\n    </footer>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  charactersCount: getCharactersCount(state),\n});\n\nexport default connect(mapStateToProps, null)(withRouter(Pagination));\n\nPagination.propTypes = {\n  charactersCount: PropTypes.number.isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Track = styled.div`\n  position: relative;\n  width: 230px;\n  height: 15px;\n  margin-bottom: 13px;\n  background-color: white;\n  border: 1px solid #6bccf9; \n`;\n\nconst Thumb = styled.div`\n  width: ${(props) => props.percentage}%;\n  height: 100%;\n  background-color: #6bccf9;\n  transition: width 0.5s ease-in-out;\n`;\n\nconst Procent = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  font-weight: bold;\n  font-size: 12px;\n  margin: 14px 0 0 -10px;\n`;\n\nconst ProgressBar = ({ percentage }) => {\n  const clamp = (min, value, max) => Math.min(Math.max(min, value), max);\n\n  return (\n    <>\n      <Track>\n        <Thumb percentage={clamp(0, percentage, 100)} />\n      </Track>\n      <Procent>\n        {`${percentage}%`}\n      </Procent>\n    </>\n  );\n};\n\nProgressBar.propTypes = {\n  percentage: PropTypes.number.isRequired,\n};\n\nexport default ProgressBar;\n","import React, { useState } from 'react';\nimport '../styles/Block.scss';\nimport styled from 'styled-components';\nimport ProgressBar from './ProgressBar';\n\nconst ProgressBarContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst Block = () => {\n  const randomInteger = (min, max) => {\n    const rand = min + Math.random() * (max + 1 - min);\n\n    setPercentage(Math.floor(rand));\n  };\n\n  const [percentage, setPercentage] = useState(10);\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"box-number\">25</div>\n      <div className=\"block\">\n        <div className=\"block__heading\">Обучение по продажам</div>\n        <div className=\"block__text\">Вы сделали 13 продаж и заработали:</div>\n        <div className=\"block__price\">$ 2 000</div>\n        <div className=\"wrapper__progress-bar\">\n          <div className=\"progress-bar\">\n            <div className=\"progress-bar__heading\">\n              Месячный план выполнен на\n            </div>\n            <ProgressBarContainer>\n              <ProgressBar percentage={percentage} />\n            </ProgressBarContainer>\n            <div className=\"progress-bar__container\">\n              <button\n                className=\"progress-bar__button\"\n                type=\"button\"\n                onClick={() => randomInteger(10, 100)}\n              >\n                Продолжить\n              </button>\n              <p className=\"progress-bar__text\">Осталось 8 дней</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Block;\n","import React from 'react';\nimport { Menu } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport Loader from 'react-loader-spinner';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n  getIsLoading,\n  getCharactersCount,\n  getLoadingError,\n} from './store/store';\nimport { loadCharacters } from './store/actions';\nimport CharactersTable from './components/CharactersTable';\nimport Pagination from './components/Pagination';\nimport './styles/App.scss';\nimport Block from './components/Block';\n\nclass App extends React.Component {\n  // eslint-disable-next-line react/state-in-constructor\n  state = { activeItem: 'home' };\n\n  componentDidMount() {\n    const { fetchCharacters } = this.props;\n\n    fetchCharacters();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { history, location } = this.props;\n\n    if (location.pathname.length !== 2\n      || !/[1-4]/.test(location.pathname.slice(-1))) {\n      history.push({ pathname: '/1' });\n    }\n  }\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n  render() {\n    const { activeItem } = this.state;\n\n    const { isLoading, loadingError, charactersCount } = this.props;\n\n    if (isLoading) {\n      return (\n        <Loader className=\"spinner\" type=\"ThreeDots\" color=\"#324960\" />\n      );\n    }\n\n    if (loadingError) {\n      return (\n        <p className=\"error-message\">Sorry, something went wrong.</p>\n      );\n    }\n\n    return (\n      <div>\n        <Menu pointing>\n          <Menu.Item\n            name=\"characters\"\n            active={activeItem === 'characters'}\n            onClick={this.handleItemClick}\n          />\n          <Menu.Item\n            name=\"task2\"\n            active={activeItem === 'task2'}\n            onClick={this.handleItemClick}\n          />\n        </Menu>\n        <div>\n          {activeItem === 'characters' && charactersCount > 0 && (\n            <>\n              <CharactersTable />\n              <Pagination />\n            </>\n          )}\n          {activeItem === 'task2' && (\n            <>\n              <Block />\n            </>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isLoading: getIsLoading(state),\n  loadingError: getLoadingError(state),\n  charactersCount: getCharactersCount(state),\n});\n\nexport default connect(\n  mapStateToProps,\n  { fetchCharacters: loadCharacters },\n)(withRouter(App));\n\nApp.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  loadingError: PropTypes.bool.isRequired,\n  charactersCount: PropTypes.number.isRequired,\n  fetchCharacters: PropTypes.func.isRequired,\n  history: PropTypes.shape({ push: PropTypes.func.isRequired }).isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport store from './store/store';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}